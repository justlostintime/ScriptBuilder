•ÿ{
  "url": "https://api.github.com/gists/fbeb1b7a06fff3da3f8b262ee5d71390",
  "forks_url": "https://api.github.com/gists/fbeb1b7a06fff3da3f8b262ee5d71390/forks",
  "commits_url": "https://api.github.com/gists/fbeb1b7a06fff3da3f8b262ee5d71390/commits",
  "id": "fbeb1b7a06fff3da3f8b262ee5d71390",
  "node_id": "MDQ6R2lzdGZiZWIxYjdhMDZmZmYzZGEzZjhiMjYyZWU1ZDcxMzkw",
  "git_pull_url": "https://gist.github.com/fbeb1b7a06fff3da3f8b262ee5d71390.git",
  "git_push_url": "https://gist.github.com/fbeb1b7a06fff3da3f8b262ee5d71390.git",
  "html_url": "https://gist.github.com/anonymous/fbeb1b7a06fff3da3f8b262ee5d71390",
  "files": {
    "playground.gbs": {
      "filename": "playground.gbs",
      "type": "text/plain",
      "language": "Gerber Image",
      "raw_url": "https://gist.githubusercontent.com/anonymous/fbeb1b7a06fff3da3f8b262ee5d71390/raw/24b4dba020ef41b6a1697ed593703d6515027ecf/playground.gbs",
      "size": 2570,
      "truncated": false,
      "content": "Public Sub Main()\nDim aMonth As Short[] = [1, 3, 5, 7, 8, 10, 12]                       'All 31 day months\nDim aMMStore As New String[]                                          'To store results\nDim siYear, siMonth, siCount As Short                                 'Various variables\nDim dDay As Date                                                      'To store the day to check\nDim sTemp As String                                                   'Temp string\n \nFor siYear = 1900 To 2100                                             'Loop through each year\n  For siMonth = 0 To 6                                                'Loop through each 31 day month\n    dDay = Date(siYear, aMonth[siMonth], 1)                           'Get the date of the 1st of the month\n    If WeekDay(dDay) = 5 Then aMMStore.Add(Format(dDay, \"mmmm yyyy\")) 'If the 1st is a Friday then store the result\n  Next\nNext\n \nFor Each sTemp In aMMStore                                            'For each item in the stored array..\n  Inc siCount                                                         'Increase siCount\n  If siCount < 6 Then Print aMMStore[siCount]                         'If 1 of the 1st 5 dates then print it\n  If siCount = 6 Then Print String$(14, \"-\")                          'Print a separator\n  If siCount > aMMStore.Max - 4 Then Print aMMStore[siCount - 1]      'If 1 of the last 5 dates then print it\nNext\n \nPrint gb.NewLine & \"Total months = \" & Str(siCount)                   'Print the number of months found\n \nsiCount = 0                                                           'Reset siCount\nsTemp = aMMStore.Join(\",\")                                            'Put all the stored dates in one string joined by commas\naMMStore.Clear                                                        'Clear the store for reuse\n \nFor siYear = 1900 To 2100                                             'Loop through each year\n   If Not InStr(sTemp, Str(siYear)) Then                              'If the year is not in the stored string then.. \n    Inc siCount                                                       'Increase siCount (Amount of years that don't have 5 weekend months)\n    aMMStore.Add(Str(siYear))                                         'Add to the store\n   End If\nNext\n \nPrint gb.NewLine & \"There are \" & Str(siCount) &\n  \" years that do not have at least one five-weekend month\"           'Print the amount of years with no 5 weekend months\nPrint aMMStore.Join(\",\")                                              'Print the years with no 5 weekend months\nEnd",
      "encoding": "utf-8"
    }
  },
  "public": true,
  "created_at": "2017-08-31T15:01:48Z",
  "updated_at": "2017-08-31T15:01:48Z",
  "description": "Shared via Gambas Playground",
  "comments": 0,
  "user": null,
  "comments_enabled": true,
  "comments_url": "https://api.github.com/gists/fbeb1b7a06fff3da3f8b262ee5d71390/comments",
  "forks": [

  ],
  "history": [
    {
      "user": {
        "login": "invalid-email-address",
        "id": 148100,
        "node_id": "MDQ6VXNlcjE0ODEwMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/invalid-email-address",
        "html_url": "https://github.com/invalid-email-address",
        "followers_url": "https://api.github.com/users/invalid-email-address/followers",
        "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}",
        "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions",
        "organizations_url": "https://api.github.com/users/invalid-email-address/orgs",
        "repos_url": "https://api.github.com/users/invalid-email-address/repos",
        "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}",
        "received_events_url": "https://api.github.com/users/invalid-email-address/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "version": "68144d616e4a48b3caaa4afd236eea312ec53dc0",
      "committed_at": "2017-08-31T15:01:47Z",
      "change_status": {
        "total": 38,
        "additions": 38,
        "deletions": 0
      },
      "url": "https://api.github.com/gists/fbeb1b7a06fff3da3f8b262ee5d71390/68144d616e4a48b3caaa4afd236eea312ec53dc0"
    }
  ],
  "truncated": false
}
