•Ö{
  "url": "https://api.github.com/gists/4169e7641f29ff0ae1dd202b459e60ce",
  "forks_url": "https://api.github.com/gists/4169e7641f29ff0ae1dd202b459e60ce/forks",
  "commits_url": "https://api.github.com/gists/4169e7641f29ff0ae1dd202b459e60ce/commits",
  "id": "4169e7641f29ff0ae1dd202b459e60ce",
  "node_id": "MDQ6R2lzdDQxNjllNzY0MWYyOWZmMGFlMWRkMjAyYjQ1OWU2MGNl",
  "git_pull_url": "https://gist.github.com/4169e7641f29ff0ae1dd202b459e60ce.git",
  "git_push_url": "https://gist.github.com/4169e7641f29ff0ae1dd202b459e60ce.git",
  "html_url": "https://gist.github.com/anonymous/4169e7641f29ff0ae1dd202b459e60ce",
  "files": {
    "playground.gbs": {
      "filename": "playground.gbs",
      "type": "text/plain",
      "language": "Gerber Image",
      "raw_url": "https://gist.githubusercontent.com/anonymous/4169e7641f29ff0ae1dd202b459e60ce/raw/2e94f6d8ced3870608cc2caa571e3ef53976947d/playground.gbs",
      "size": 2519,
      "truncated": false,
      "content": "Public Sub Main()\nDim iList1 As Integer[] = [1, 34, 3, 98, 9, 76, 45, 4]      'Integer list 1\nDim iList2 As Integer[] = [54, 546, 548, 60]                'Integer list 2\n \nCalc(iList1)                                                'Send List 1 to Calc routine \nCalc(iList2)                                                'Send List 2 to Calc routine\n \nEnd\n'_________________________________________________________________________________________\n \nPublic Sub Calc(iList As Integer[])\nDim siCount1, siCount2, siCounter As Short                  'Counters\nDim sList As New String[]                                   'To hold converted integers\nDim bTrigger As Boolean                                     'To trigger a found match\n \nFor Each siCount1 In iList                                  'For each integer in the list..\n  sList.Add(Str(siCount1))                                  'Convert to a string and add to sList\n  If Len(Str(siCount1)) > siCounter Then                    'If the length of the string is greater than siCounter then..\n    siCounter = Len(Str(siCount1))                          'siCounter = length of the string\n  End If\nNext\n \nFor siCount1 = 0 To sList.Max                               'For each item in sList\n  If Len(sList[siCount1]) < siCounter Then                  'If the length of the string is less that siCounter then..\n    sList[siCount1] &= Right(sList[siCount1], 1)            'Add the same digit to the string e.g. in list 1 \"9\" becomes \"99\", list 2 \"54\" becomes \"544\"\n  End If\nNext\n \nsList.Sort(gb.Descent)                                      'Sort the list in decending order\n \nFor siCount1 = 0 To sList.Max                               'For each item in sList\n  bTrigger = False                                          'Set bTrigger to False\n  For siCount2 = 0 To iList.Max                             'Loop through each item in iList\n    If Val(sList[siCount1]) = iList[siCount2] Then          'If the value of each is the same e.g. \"98\" = 98 then\n      bTrigger = True                                       'Set bTrigger to True\n      Continue                                              'Exit the loop\n    Endif\n  Next\n  If Not bTrigger Then                                      'If there was no match e.g. there is no \"99\" then.. \n    sList[siCount1] = Left(sList[siCount1], siCounter - 1)  'Strip out the end digit e.g. \"99\" becomes 9 again\n  End If\nNext\n \nPrint Val(sList.Join(\"\"))                                   'Join all items in sList together and print\n \nEnd",
      "encoding": "utf-8"
    }
  },
  "public": true,
  "created_at": "2017-08-31T15:36:55Z",
  "updated_at": "2017-08-31T15:36:55Z",
  "description": "Shared via Gambas Playground",
  "comments": 0,
  "user": null,
  "comments_enabled": true,
  "comments_url": "https://api.github.com/gists/4169e7641f29ff0ae1dd202b459e60ce/comments",
  "forks": [

  ],
  "history": [
    {
      "user": {
        "login": "invalid-email-address",
        "id": 148100,
        "node_id": "MDQ6VXNlcjE0ODEwMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/invalid-email-address",
        "html_url": "https://github.com/invalid-email-address",
        "followers_url": "https://api.github.com/users/invalid-email-address/followers",
        "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}",
        "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions",
        "organizations_url": "https://api.github.com/users/invalid-email-address/orgs",
        "repos_url": "https://api.github.com/users/invalid-email-address/repos",
        "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}",
        "received_events_url": "https://api.github.com/users/invalid-email-address/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "version": "5ecc2265c71d29e45aaa613615c82f96ec03781d",
      "committed_at": "2017-08-31T15:36:54Z",
      "change_status": {
        "total": 46,
        "additions": 46,
        "deletions": 0
      },
      "url": "https://api.github.com/gists/4169e7641f29ff0ae1dd202b459e60ce/5ecc2265c71d29e45aaa613615c82f96ec03781d"
    }
  ],
  "truncated": false
}
